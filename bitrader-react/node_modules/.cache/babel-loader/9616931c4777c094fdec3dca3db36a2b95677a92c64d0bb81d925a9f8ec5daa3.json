{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\n\n// Import theme-mode.js functionality - try/catch to handle if file doesn't exist\ntry {\n  require('../assets/js/theme-mode');\n} catch (e) {\n  console.warn('theme-mode.js not found');\n}\n\n// This component handles loading and initializing JavaScript files\nconst JsLoader = () => {\n  _s();\n  useEffect(() => {\n    // Create script elements for external JS files with error handling\n    const loadExternalScript = (src, id) => {\n      if (document.getElementById(id)) return; // Already loaded\n\n      const script = document.createElement('script');\n      script.src = src;\n      script.id = id;\n      script.async = false; // Load in order\n\n      // Add error handling\n      script.onerror = () => {\n        console.warn(`JS file not found or has syntax errors: ${src}`);\n        // Don't remove the script element as this could break dependencies\n      };\n      document.body.appendChild(script);\n    };\n\n    // Try to load jQuery first (as Bootstrap depends on it)\n    loadExternalScript('/js/jquery.min.js', 'jquery-js');\n\n    // Add a small delay to ensure jQuery loads before Bootstrap\n    setTimeout(() => {\n      // Then load Bootstrap\n      loadExternalScript('/js/bootstrap.bundle.min.js', 'bootstrap-js');\n\n      // Then load any theme-specific JS\n      loadExternalScript('/js/theme.js', 'theme-js');\n    }, 100);\n\n    // Clean up on unmount\n    return () => {\n      // Optional: Remove scripts when component unmounts\n      // const bootstrap = document.getElementById('bootstrap-js');\n      // if (bootstrap) bootstrap.remove();\n    };\n  }, []);\n  return null; // This component doesn't render anything\n};\n_s(JsLoader, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = JsLoader;\nexport default JsLoader;\nvar _c;\n$RefreshReg$(_c, \"JsLoader\");","map":{"version":3,"names":["React","useEffect","require","e","console","warn","JsLoader","_s","loadExternalScript","src","id","document","getElementById","script","createElement","async","onerror","body","appendChild","setTimeout","_c","$RefreshReg$"],"sources":["C:/Users/LUPA/3D Objects/bitrader-react/src/components/JsLoader.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\n// Import theme-mode.js functionality - try/catch to handle if file doesn't exist\r\ntry {\r\n  require('../assets/js/theme-mode');\r\n} catch (e) {\r\n  console.warn('theme-mode.js not found');\r\n}\r\n\r\n// This component handles loading and initializing JavaScript files\r\nconst JsLoader = () => {\r\n  useEffect(() => {\r\n    // Create script elements for external JS files with error handling\r\n    const loadExternalScript = (src, id) => {\r\n      if (document.getElementById(id)) return; // Already loaded\r\n      \r\n      const script = document.createElement('script');\r\n      script.src = src;\r\n      script.id = id;\r\n      script.async = false; // Load in order\r\n      \r\n      // Add error handling\r\n      script.onerror = () => {\r\n        console.warn(`JS file not found or has syntax errors: ${src}`);\r\n        // Don't remove the script element as this could break dependencies\r\n      };\r\n      \r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    // Try to load jQuery first (as Bootstrap depends on it)\r\n    loadExternalScript('/js/jquery.min.js', 'jquery-js');\r\n    \r\n    // Add a small delay to ensure jQuery loads before Bootstrap\r\n    setTimeout(() => {\r\n      // Then load Bootstrap\r\n      loadExternalScript('/js/bootstrap.bundle.min.js', 'bootstrap-js');\r\n      \r\n      // Then load any theme-specific JS\r\n      loadExternalScript('/js/theme.js', 'theme-js');\r\n    }, 100);\r\n\r\n    // Clean up on unmount\r\n    return () => {\r\n      // Optional: Remove scripts when component unmounts\r\n      // const bootstrap = document.getElementById('bootstrap-js');\r\n      // if (bootstrap) bootstrap.remove();\r\n    };\r\n  }, []);\r\n\r\n  return null; // This component doesn't render anything\r\n};\r\n\r\nexport default JsLoader; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AACA,IAAI;EACFC,OAAO,CAAC,yBAAyB,CAAC;AACpC,CAAC,CAAC,OAAOC,CAAC,EAAE;EACVC,OAAO,CAACC,IAAI,CAAC,yBAAyB,CAAC;AACzC;;AAEA;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrBN,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,kBAAkB,GAAGA,CAACC,GAAG,EAAEC,EAAE,KAAK;MACtC,IAAIC,QAAQ,CAACC,cAAc,CAACF,EAAE,CAAC,EAAE,OAAO,CAAC;;MAEzC,MAAMG,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;MAC/CD,MAAM,CAACJ,GAAG,GAAGA,GAAG;MAChBI,MAAM,CAACH,EAAE,GAAGA,EAAE;MACdG,MAAM,CAACE,KAAK,GAAG,KAAK,CAAC,CAAC;;MAEtB;MACAF,MAAM,CAACG,OAAO,GAAG,MAAM;QACrBZ,OAAO,CAACC,IAAI,CAAC,2CAA2CI,GAAG,EAAE,CAAC;QAC9D;MACF,CAAC;MAEDE,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACL,MAAM,CAAC;IACnC,CAAC;;IAED;IACAL,kBAAkB,CAAC,mBAAmB,EAAE,WAAW,CAAC;;IAEpD;IACAW,UAAU,CAAC,MAAM;MACf;MACAX,kBAAkB,CAAC,6BAA6B,EAAE,cAAc,CAAC;;MAEjE;MACAA,kBAAkB,CAAC,cAAc,EAAE,UAAU,CAAC;IAChD,CAAC,EAAE,GAAG,CAAC;;IAEP;IACA,OAAO,MAAM;MACX;MACA;MACA;IAAA,CACD;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACD,EAAA,CAzCID,QAAQ;AAAAc,EAAA,GAARd,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}