{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUPA\\\\3D Objects\\\\bitrader-react\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { preloadThemeAssets } from '../utils/preloadAssets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(() => {\n    return localStorage.getItem('bitrader-theme-mode') || 'light';\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const initializeTheme = async () => {\n      try {\n        await preloadThemeAssets();\n        document.documentElement.setAttribute('data-bs-theme', theme);\n        localStorage.setItem('bitrader-theme-mode', theme);\n      } catch (error) {\n        console.error('Failed to preload theme assets:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializeTheme();\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  if (isLoading) {\n    return null; // Or return a loading spinner\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"4PUdE+94sgxtGF0hRYfrxrVLJHQ=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","preloadThemeAssets","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","localStorage","getItem","isLoading","setIsLoading","initializeTheme","document","documentElement","setAttribute","setItem","error","console","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/Users/LUPA/3D Objects/bitrader-react/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { preloadThemeAssets } from '../utils/preloadAssets';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(() => {\r\n    return localStorage.getItem('bitrader-theme-mode') || 'light';\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initializeTheme = async () => {\r\n      try {\r\n        await preloadThemeAssets();\r\n        document.documentElement.setAttribute('data-bs-theme', theme);\r\n        localStorage.setItem('bitrader-theme-mode', theme);\r\n      } catch (error) {\r\n        console.error('Failed to preload theme assets:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeTheme();\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  if (isLoading) {\r\n    return null; // Or return a loading spinner\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,kBAAkB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMQ,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACvC,OAAOW,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,IAAI,OAAO;EAC/D,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMb,kBAAkB,CAAC,CAAC;QAC1Bc,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,eAAe,EAAET,KAAK,CAAC;QAC7DE,YAAY,CAACQ,OAAO,CAAC,qBAAqB,EAAEV,KAAK,CAAC;MACpD,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD,CAAC,SAAS;QACRN,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxBZ,QAAQ,CAACa,SAAS,IAAIA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EACjE,CAAC;EAED,IAAIV,SAAS,EAAE;IACb,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACET,OAAA,CAACC,YAAY,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,KAAK;MAAEa;IAAY,CAAE;IAAAf,QAAA,EAClDA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACrB,EAAA,CAnCWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAqC1B,OAAO,MAAMyB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMjC,UAAU,CAACM,YAAY,CAAC;AAAA;AAAC2B,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}