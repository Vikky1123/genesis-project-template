{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\n\n// Import theme-mode.js functionality - try/catch to handle if file doesn't exist\ntry {\n  require('../assets/js/theme-mode');\n} catch (e) {\n  console.warn('theme-mode.js not found');\n}\n\n// This component handles loading and initializing JavaScript files\nconst JsLoader = () => {\n  _s();\n  useEffect(() => {\n    // Create script elements for external JS files\n    const loadExternalScript = (src, id) => {\n      if (document.getElementById(id)) return; // Already loaded\n\n      const script = document.createElement('script');\n      script.src = src;\n      script.id = id;\n      script.async = false; // Load in order\n      document.body.appendChild(script);\n    };\n\n    // Load Bootstrap from public directory (not processed by Babel)\n    loadExternalScript('/js/bootstrap.bundle.min.js', 'bootstrap-js');\n\n    // Try to load other scripts if they exist\n    try {\n      const jqueryPath = '/js/jquery.min.js';\n      loadExternalScript(jqueryPath, 'jquery');\n    } catch (e) {\n      console.warn('jQuery script reference error:', e);\n    }\n\n    // Load any theme-specific JS\n    try {\n      const themePath = '/js/theme.js';\n      loadExternalScript(themePath, 'theme-js');\n    } catch (e) {\n      console.warn('Theme JS reference error:', e);\n    }\n\n    // Clean up on unmount\n    return () => {\n      // Optional: Remove scripts when component unmounts\n      // const bootstrap = document.getElementById('bootstrap-js');\n      // if (bootstrap) bootstrap.remove();\n    };\n  }, []);\n  return null; // This component doesn't render anything\n};\n_s(JsLoader, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = JsLoader;\nexport default JsLoader;\nvar _c;\n$RefreshReg$(_c, \"JsLoader\");","map":{"version":3,"names":["React","useEffect","require","e","console","warn","JsLoader","_s","loadExternalScript","src","id","document","getElementById","script","createElement","async","body","appendChild","jqueryPath","themePath","_c","$RefreshReg$"],"sources":["C:/Users/LUPA/3D Objects/bitrader-react/src/components/JsLoader.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\n// Import theme-mode.js functionality - try/catch to handle if file doesn't exist\r\ntry {\r\n  require('../assets/js/theme-mode');\r\n} catch (e) {\r\n  console.warn('theme-mode.js not found');\r\n}\r\n\r\n// This component handles loading and initializing JavaScript files\r\nconst JsLoader = () => {\r\n  useEffect(() => {\r\n    // Create script elements for external JS files\r\n    const loadExternalScript = (src, id) => {\r\n      if (document.getElementById(id)) return; // Already loaded\r\n      \r\n      const script = document.createElement('script');\r\n      script.src = src;\r\n      script.id = id;\r\n      script.async = false; // Load in order\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    // Load Bootstrap from public directory (not processed by Babel)\r\n    loadExternalScript('/js/bootstrap.bundle.min.js', 'bootstrap-js');\r\n    \r\n    // Try to load other scripts if they exist\r\n    try {\r\n      const jqueryPath = '/js/jquery.min.js';\r\n      loadExternalScript(jqueryPath, 'jquery');\r\n    } catch (e) {\r\n      console.warn('jQuery script reference error:', e);\r\n    }\r\n\r\n    // Load any theme-specific JS\r\n    try {\r\n      const themePath = '/js/theme.js';\r\n      loadExternalScript(themePath, 'theme-js');\r\n    } catch (e) {\r\n      console.warn('Theme JS reference error:', e);\r\n    }\r\n\r\n    // Clean up on unmount\r\n    return () => {\r\n      // Optional: Remove scripts when component unmounts\r\n      // const bootstrap = document.getElementById('bootstrap-js');\r\n      // if (bootstrap) bootstrap.remove();\r\n    };\r\n  }, []);\r\n\r\n  return null; // This component doesn't render anything\r\n};\r\n\r\nexport default JsLoader; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AACA,IAAI;EACFC,OAAO,CAAC,yBAAyB,CAAC;AACpC,CAAC,CAAC,OAAOC,CAAC,EAAE;EACVC,OAAO,CAACC,IAAI,CAAC,yBAAyB,CAAC;AACzC;;AAEA;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrBN,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,kBAAkB,GAAGA,CAACC,GAAG,EAAEC,EAAE,KAAK;MACtC,IAAIC,QAAQ,CAACC,cAAc,CAACF,EAAE,CAAC,EAAE,OAAO,CAAC;;MAEzC,MAAMG,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;MAC/CD,MAAM,CAACJ,GAAG,GAAGA,GAAG;MAChBI,MAAM,CAACH,EAAE,GAAGA,EAAE;MACdG,MAAM,CAACE,KAAK,GAAG,KAAK,CAAC,CAAC;MACtBJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACJ,MAAM,CAAC;IACnC,CAAC;;IAED;IACAL,kBAAkB,CAAC,6BAA6B,EAAE,cAAc,CAAC;;IAEjE;IACA,IAAI;MACF,MAAMU,UAAU,GAAG,mBAAmB;MACtCV,kBAAkB,CAACU,UAAU,EAAE,QAAQ,CAAC;IAC1C,CAAC,CAAC,OAAOf,CAAC,EAAE;MACVC,OAAO,CAACC,IAAI,CAAC,gCAAgC,EAAEF,CAAC,CAAC;IACnD;;IAEA;IACA,IAAI;MACF,MAAMgB,SAAS,GAAG,cAAc;MAChCX,kBAAkB,CAACW,SAAS,EAAE,UAAU,CAAC;IAC3C,CAAC,CAAC,OAAOhB,CAAC,EAAE;MACVC,OAAO,CAACC,IAAI,CAAC,2BAA2B,EAAEF,CAAC,CAAC;IAC9C;;IAEA;IACA,OAAO,MAAM;MACX;MACA;MACA;IAAA,CACD;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACI,EAAA,CAzCID,QAAQ;AAAAc,EAAA,GAARd,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}