{"ast":null,"code":"/**\n * Bitrader Theme Mode JS\n * Handles persistent light/dark mode across pages\n */\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const toggleVersionButton = document.getElementById('btnSwitch');\n  const htmlElement = document.documentElement;\n  const icon = document.querySelector('#btnSwitch img');\n\n  // Check if there's a main logo element\n  const mainLogo = document.getElementById('main-logo');\n\n  // Get default and dark logo URLs (handle relative paths)\n  let defaultLogoUrl = '';\n  let darkLogoUrl = '';\n  if (mainLogo) {\n    defaultLogoUrl = mainLogo.src;\n\n    // Extract the base URL from the current logo src\n    const baseUrl = defaultLogoUrl.split('/wp-content/')[0];\n    darkLogoUrl = baseUrl + '/wp-content/uploads/2024/06/logo-dark-1.png';\n  }\n\n  // Function to apply theme\n  function applyTheme(isDark) {\n    // Update HTML attribute\n    htmlElement.setAttribute('data-bs-theme', isDark ? 'dark' : 'light');\n\n    // Update icon\n    if (icon) {\n      if (isDark) {\n        const iconPath = icon.src.split('/').slice(0, -1).join('/') + '/sun.svg';\n        icon.src = iconPath;\n        toggleVersionButton.style.backgroundColor = 'white';\n      } else {\n        const iconPath = icon.src.split('/').slice(0, -1).join('/') + '/moon.svg';\n        icon.src = iconPath;\n        toggleVersionButton.style.backgroundColor = '#00D094';\n      }\n    }\n\n    // Update logo if available\n    if (mainLogo && defaultLogoUrl && darkLogoUrl) {\n      mainLogo.src = isDark ? darkLogoUrl : defaultLogoUrl;\n    }\n  }\n\n  // Check localStorage for saved preference\n  const savedTheme = localStorage.getItem('bitrader-theme-mode');\n  const isDarkMode = savedTheme === 'dark';\n\n  // Apply saved theme preference\n  if (savedTheme) {\n    applyTheme(isDarkMode);\n  }\n\n  // Add click event to toggle button\n  if (toggleVersionButton) {\n    toggleVersionButton.addEventListener('click', function () {\n      // Get current theme\n      const currentTheme = htmlElement.getAttribute('data-bs-theme');\n      const isDark = currentTheme !== 'dark';\n\n      // Save to localStorage\n      localStorage.setItem('bitrader-theme-mode', isDark ? 'dark' : 'light');\n\n      // Apply theme\n      applyTheme(isDark);\n    });\n  }\n});","map":{"version":3,"names":["document","addEventListener","toggleVersionButton","getElementById","htmlElement","documentElement","icon","querySelector","mainLogo","defaultLogoUrl","darkLogoUrl","src","baseUrl","split","applyTheme","isDark","setAttribute","iconPath","slice","join","style","backgroundColor","savedTheme","localStorage","getItem","isDarkMode","currentTheme","getAttribute","setItem"],"sources":["C:/Users/LUPA/3D Objects/bitrader-react/src/assets/js/theme-mode.js"],"sourcesContent":["/**\n * Bitrader Theme Mode JS\n * Handles persistent light/dark mode across pages\n */\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const toggleVersionButton = document.getElementById('btnSwitch');\n    const htmlElement = document.documentElement;\n    const icon = document.querySelector('#btnSwitch img');\n    \n    // Check if there's a main logo element\n    const mainLogo = document.getElementById('main-logo');\n    \n    // Get default and dark logo URLs (handle relative paths)\n    let defaultLogoUrl = '';\n    let darkLogoUrl = '';\n    \n    if (mainLogo) {\n        defaultLogoUrl = mainLogo.src;\n        \n        // Extract the base URL from the current logo src\n        const baseUrl = defaultLogoUrl.split('/wp-content/')[0];\n        darkLogoUrl = baseUrl + '/wp-content/uploads/2024/06/logo-dark-1.png';\n    }\n    \n    // Function to apply theme\n    function applyTheme(isDark) {\n        // Update HTML attribute\n        htmlElement.setAttribute('data-bs-theme', isDark ? 'dark' : 'light');\n        \n        // Update icon\n        if (icon) {\n            if (isDark) {\n                const iconPath = icon.src.split('/').slice(0, -1).join('/') + '/sun.svg';\n                icon.src = iconPath;\n                toggleVersionButton.style.backgroundColor = 'white';\n            } else {\n                const iconPath = icon.src.split('/').slice(0, -1).join('/') + '/moon.svg';\n                icon.src = iconPath;\n                toggleVersionButton.style.backgroundColor = '#00D094';\n            }\n        }\n        \n        // Update logo if available\n        if (mainLogo && defaultLogoUrl && darkLogoUrl) {\n            mainLogo.src = isDark ? darkLogoUrl : defaultLogoUrl;\n        }\n    }\n    \n    // Check localStorage for saved preference\n    const savedTheme = localStorage.getItem('bitrader-theme-mode');\n    const isDarkMode = savedTheme === 'dark';\n    \n    // Apply saved theme preference\n    if (savedTheme) {\n        applyTheme(isDarkMode);\n    }\n    \n    // Add click event to toggle button\n    if (toggleVersionButton) {\n        toggleVersionButton.addEventListener('click', function() {\n            // Get current theme\n            const currentTheme = htmlElement.getAttribute('data-bs-theme');\n            const isDark = currentTheme !== 'dark';\n            \n            // Save to localStorage\n            localStorage.setItem('bitrader-theme-mode', isDark ? 'dark' : 'light');\n            \n            // Apply theme\n            applyTheme(isDark);\n        });\n    }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;EACrD,MAAMC,mBAAmB,GAAGF,QAAQ,CAACG,cAAc,CAAC,WAAW,CAAC;EAChE,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,eAAe;EAC5C,MAAMC,IAAI,GAAGN,QAAQ,CAACO,aAAa,CAAC,gBAAgB,CAAC;;EAErD;EACA,MAAMC,QAAQ,GAAGR,QAAQ,CAACG,cAAc,CAAC,WAAW,CAAC;;EAErD;EACA,IAAIM,cAAc,GAAG,EAAE;EACvB,IAAIC,WAAW,GAAG,EAAE;EAEpB,IAAIF,QAAQ,EAAE;IACVC,cAAc,GAAGD,QAAQ,CAACG,GAAG;;IAE7B;IACA,MAAMC,OAAO,GAAGH,cAAc,CAACI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACvDH,WAAW,GAAGE,OAAO,GAAG,6CAA6C;EACzE;;EAEA;EACA,SAASE,UAAUA,CAACC,MAAM,EAAE;IACxB;IACAX,WAAW,CAACY,YAAY,CAAC,eAAe,EAAED,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;;IAEpE;IACA,IAAIT,IAAI,EAAE;MACN,IAAIS,MAAM,EAAE;QACR,MAAME,QAAQ,GAAGX,IAAI,CAACK,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU;QACxEb,IAAI,CAACK,GAAG,GAAGM,QAAQ;QACnBf,mBAAmB,CAACkB,KAAK,CAACC,eAAe,GAAG,OAAO;MACvD,CAAC,MAAM;QACH,MAAMJ,QAAQ,GAAGX,IAAI,CAACK,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,WAAW;QACzEb,IAAI,CAACK,GAAG,GAAGM,QAAQ;QACnBf,mBAAmB,CAACkB,KAAK,CAACC,eAAe,GAAG,SAAS;MACzD;IACJ;;IAEA;IACA,IAAIb,QAAQ,IAAIC,cAAc,IAAIC,WAAW,EAAE;MAC3CF,QAAQ,CAACG,GAAG,GAAGI,MAAM,GAAGL,WAAW,GAAGD,cAAc;IACxD;EACJ;;EAEA;EACA,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC;EAC9D,MAAMC,UAAU,GAAGH,UAAU,KAAK,MAAM;;EAExC;EACA,IAAIA,UAAU,EAAE;IACZR,UAAU,CAACW,UAAU,CAAC;EAC1B;;EAEA;EACA,IAAIvB,mBAAmB,EAAE;IACrBA,mBAAmB,CAACD,gBAAgB,CAAC,OAAO,EAAE,YAAW;MACrD;MACA,MAAMyB,YAAY,GAAGtB,WAAW,CAACuB,YAAY,CAAC,eAAe,CAAC;MAC9D,MAAMZ,MAAM,GAAGW,YAAY,KAAK,MAAM;;MAEtC;MACAH,YAAY,CAACK,OAAO,CAAC,qBAAqB,EAAEb,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;;MAEtE;MACAD,UAAU,CAACC,MAAM,CAAC;IACtB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}