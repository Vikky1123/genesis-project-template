{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUPA\\\\3D Objects\\\\bitrader-react\\\\src\\\\components\\\\Header\\\\ThemeToggle.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTheme } from '../../context/ThemeContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const {\n    theme,\n    toggleTheme\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lightdark-switch\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"switch-btn dark-btn\",\n        id: \"btnSwitch\",\n        style: {\n          backgroundColor: theme === 'dark' ? '#ffffff' : '#00d094'\n        },\n        onClick: toggleTheme,\n        role: \"button\",\n        tabIndex: 0,\n        \"aria-pressed\": theme === 'dark',\n        \"aria-label\": `Switch to ${theme === 'light' ? 'dark' : 'light'} theme`,\n        onKeyDown: e => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault();\n            toggleTheme();\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/assets/img/icons/${theme === 'dark' ? 'sun' : 'moon'}.svg`,\n          alt: `${theme === 'dark' ? 'Light' : 'Dark'} mode icon`,\n          className: \"swtich-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"status\",\n      \"aria-live\": \"polite\",\n      className: \"visually-hidden\",\n      children: `Currently in ${theme} mode`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ThemeToggle, \"Q4eAjrIZ0CuRuhycs6byifK2KBk=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","ThemeToggle","_s","theme","toggleTheme","children","className","id","style","backgroundColor","onClick","role","tabIndex","onKeyDown","e","key","preventDefault","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LUPA/3D Objects/bitrader-react/src/components/Header/ThemeToggle.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useTheme } from '../../context/ThemeContext';\r\n\r\nconst ThemeToggle = () => {\r\n  const { theme, toggleTheme } = useTheme();\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"lightdark-switch\">\r\n        <span \r\n          className=\"switch-btn dark-btn\" \r\n          id=\"btnSwitch\" \r\n          style={{ backgroundColor: theme === 'dark' ? '#ffffff' : '#00d094' }}\r\n          onClick={toggleTheme}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          aria-pressed={theme === 'dark'}\r\n          aria-label={`Switch to ${theme === 'light' ? 'dark' : 'light'} theme`}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' || e.key === ' ') {\r\n              e.preventDefault();\r\n              toggleTheme();\r\n            }\r\n          }}\r\n        >\r\n          <img \r\n            src={`/assets/img/icons/${theme === 'dark' ? 'sun' : 'moon'}.svg`} \r\n            alt={`${theme === 'dark' ? 'Light' : 'Dark'} mode icon`}\r\n            className=\"swtich-icon\"\r\n          />\r\n        </span>\r\n      </div>\r\n      <div \r\n        role=\"status\" \r\n        aria-live=\"polite\" \r\n        className=\"visually-hidden\"\r\n      >\r\n        {`Currently in ${theme} mode`}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAEzC,oBACEE,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAKQ,SAAS,EAAC,kBAAkB;MAAAD,QAAA,eAC/BP,OAAA;QACEQ,SAAS,EAAC,qBAAqB;QAC/BC,EAAE,EAAC,WAAW;QACdC,KAAK,EAAE;UAAEC,eAAe,EAAEN,KAAK,KAAK,MAAM,GAAG,SAAS,GAAG;QAAU,CAAE;QACrEO,OAAO,EAAEN,WAAY;QACrBO,IAAI,EAAC,QAAQ;QACbC,QAAQ,EAAE,CAAE;QACZ,gBAAcT,KAAK,KAAK,MAAO;QAC/B,cAAY,aAAaA,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,QAAS;QACtEU,SAAS,EAAGC,CAAC,IAAK;UAChB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAID,CAAC,CAACC,GAAG,KAAK,GAAG,EAAE;YACtCD,CAAC,CAACE,cAAc,CAAC,CAAC;YAClBZ,WAAW,CAAC,CAAC;UACf;QACF,CAAE;QAAAC,QAAA,eAEFP,OAAA;UACEmB,GAAG,EAAE,qBAAqBd,KAAK,KAAK,MAAM,GAAG,KAAK,GAAG,MAAM,MAAO;UAClEe,GAAG,EAAE,GAAGf,KAAK,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,YAAa;UACxDG,SAAS,EAAC;QAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNxB,OAAA;MACEa,IAAI,EAAC,QAAQ;MACb,aAAU,QAAQ;MAClBL,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAE1B,gBAAgBF,KAAK;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACpB,EAAA,CAtCID,WAAW;EAAA,QACgBL,QAAQ;AAAA;AAAA2B,EAAA,GADnCtB,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}