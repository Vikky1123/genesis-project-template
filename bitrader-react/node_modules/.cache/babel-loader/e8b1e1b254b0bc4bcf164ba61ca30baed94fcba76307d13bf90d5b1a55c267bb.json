{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\n\n// Import CSS from WordPress theme\n// Check if files exist before importing\ntry {\n  require('../assets/css/bitrader-core.css');\n} catch (e) {\n  console.warn('bitrader-core.css not found');\n}\ntry {\n  require('../assets/css/bitrader-custom.css');\n} catch (e) {\n  console.warn('bitrader-custom.css not found');\n}\ntry {\n  require('../assets/css/bitrader-fonts.css');\n} catch (e) {\n  console.warn('bitrader-fonts.css not found');\n}\ntry {\n  require('../assets/css/aos.css');\n} catch (e) {\n  console.warn('aos.css not found');\n}\n\n// Import additional CSS that may be available after running the batch script\n// Uncomment these as needed once the files are copied\n/*\r\n// WordPress core CSS \r\nimport '../assets/css/wp-includes/style.css';\r\n\r\n// Elementor CSS\r\nimport '../assets/css/elementor/frontend.min.css';\r\nimport '../assets/css/elementor/widget-heading.min.css';\r\nimport '../assets/css/elementor/widget-image.min.css';\r\n*/\n\n// This component ensures CSS is loaded in the right order\nconst CssLoader = () => {\n  _s();\n  useEffect(() => {\n    // Initialize theme mode from localStorage if available\n    const storedTheme = localStorage.getItem('theme-mode');\n    if (storedTheme === 'dark') {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n\n    // Add any additional initialization needed for other WordPress scripts\n    // For example, initializing AOS (Animate On Scroll) if used\n    if (typeof window.AOS !== 'undefined') {\n      window.AOS.init();\n    }\n  }, []);\n  return null; // This component doesn't render anything\n};\n_s(CssLoader, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CssLoader;\nexport default CssLoader;\nvar _c;\n$RefreshReg$(_c, \"CssLoader\");","map":{"version":3,"names":["React","useEffect","require","e","console","warn","CssLoader","_s","storedTheme","localStorage","getItem","document","body","classList","add","remove","window","AOS","init","_c","$RefreshReg$"],"sources":["C:/Users/LUPA/3D Objects/bitrader-react/src/components/CssLoader.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\n// Import CSS from WordPress theme\r\n// Check if files exist before importing\r\ntry {\r\n  require('../assets/css/bitrader-core.css');\r\n} catch (e) {\r\n  console.warn('bitrader-core.css not found');\r\n}\r\n\r\ntry {\r\n  require('../assets/css/bitrader-custom.css');\r\n} catch (e) {\r\n  console.warn('bitrader-custom.css not found');\r\n}\r\n\r\ntry {\r\n  require('../assets/css/bitrader-fonts.css');\r\n} catch (e) {\r\n  console.warn('bitrader-fonts.css not found');\r\n}\r\n\r\ntry {\r\n  require('../assets/css/aos.css');\r\n} catch (e) {\r\n  console.warn('aos.css not found');\r\n}\r\n\r\n// Import additional CSS that may be available after running the batch script\r\n// Uncomment these as needed once the files are copied\r\n/*\r\n// WordPress core CSS \r\nimport '../assets/css/wp-includes/style.css';\r\n\r\n// Elementor CSS\r\nimport '../assets/css/elementor/frontend.min.css';\r\nimport '../assets/css/elementor/widget-heading.min.css';\r\nimport '../assets/css/elementor/widget-image.min.css';\r\n*/\r\n\r\n// This component ensures CSS is loaded in the right order\r\nconst CssLoader = () => {\r\n  useEffect(() => {\r\n    // Initialize theme mode from localStorage if available\r\n    const storedTheme = localStorage.getItem('theme-mode');\r\n    if (storedTheme === 'dark') {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n\r\n    // Add any additional initialization needed for other WordPress scripts\r\n    // For example, initializing AOS (Animate On Scroll) if used\r\n    if (typeof window.AOS !== 'undefined') {\r\n      window.AOS.init();\r\n    }\r\n  }, []);\r\n\r\n  return null; // This component doesn't render anything\r\n};\r\n\r\nexport default CssLoader; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AACA;AACA,IAAI;EACFC,OAAO,CAAC,iCAAiC,CAAC;AAC5C,CAAC,CAAC,OAAOC,CAAC,EAAE;EACVC,OAAO,CAACC,IAAI,CAAC,6BAA6B,CAAC;AAC7C;AAEA,IAAI;EACFH,OAAO,CAAC,mCAAmC,CAAC;AAC9C,CAAC,CAAC,OAAOC,CAAC,EAAE;EACVC,OAAO,CAACC,IAAI,CAAC,+BAA+B,CAAC;AAC/C;AAEA,IAAI;EACFH,OAAO,CAAC,kCAAkC,CAAC;AAC7C,CAAC,CAAC,OAAOC,CAAC,EAAE;EACVC,OAAO,CAACC,IAAI,CAAC,8BAA8B,CAAC;AAC9C;AAEA,IAAI;EACFH,OAAO,CAAC,uBAAuB,CAAC;AAClC,CAAC,CAAC,OAAOC,CAAC,EAAE;EACVC,OAAO,CAACC,IAAI,CAAC,mBAAmB,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtBN,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACtD,IAAIF,WAAW,KAAK,MAAM,EAAE;MAC1BG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC7C;;IAEA;IACA;IACA,IAAI,OAAOC,MAAM,CAACC,GAAG,KAAK,WAAW,EAAE;MACrCD,MAAM,CAACC,GAAG,CAACC,IAAI,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACX,EAAA,CAlBID,SAAS;AAAAa,EAAA,GAATb,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}