{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUPA\\\\3D Objects\\\\bitrader-react\\\\src\\\\components\\\\Header\\\\ThemeToggle.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTheme } from '../../context/ThemeContext';\nimport lightIcon from '../../assets/img/light-mode-icon.png';\nimport darkIcon from '../../assets/img/dark-mode-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const {\n    isDarkMode,\n    toggleTheme\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleTheme,\n    className: \"theme-toggle\",\n    \"aria-label\": `Switch to ${isDarkMode ? 'light' : 'dark'} mode`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: isDarkMode ? lightIcon : darkIcon,\n      alt: `${isDarkMode ? 'Light' : 'Dark'} mode icon`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"theme-status\",\n      children: [\"Currently in \", isDarkMode ? 'dark' : 'light', \" mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"MY/fJVj7pNG84xK2IRXuobEs7Rg=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useTheme","lightIcon","darkIcon","jsxDEV","_jsxDEV","ThemeToggle","_s","isDarkMode","toggleTheme","onClick","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LUPA/3D Objects/bitrader-react/src/components/Header/ThemeToggle.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useTheme } from '../../context/ThemeContext';\r\nimport lightIcon from '../../assets/img/light-mode-icon.png';\r\nimport darkIcon from '../../assets/img/dark-mode-icon.png';\r\n\r\nconst ThemeToggle = () => {\r\n  const { isDarkMode, toggleTheme } = useTheme();\r\n\r\n  return (\r\n    <button\r\n      onClick={toggleTheme}\r\n      className=\"theme-toggle\"\r\n      aria-label={`Switch to ${isDarkMode ? 'light' : 'dark'} mode`}\r\n    >\r\n      <img \r\n        src={isDarkMode ? lightIcon : darkIcon} \r\n        alt={`${isDarkMode ? 'Light' : 'Dark'} mode icon`}\r\n      />\r\n      <span className=\"theme-status\">\r\n        Currently in {isDarkMode ? 'dark' : 'light'} mode\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,QAAQ,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,UAAU;IAAEC;EAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAE9C,oBACEI,OAAA;IACEK,OAAO,EAAED,WAAY;IACrBE,SAAS,EAAC,cAAc;IACxB,cAAY,aAAaH,UAAU,GAAG,OAAO,GAAG,MAAM,OAAQ;IAAAI,QAAA,gBAE9DP,OAAA;MACEQ,GAAG,EAAEL,UAAU,GAAGN,SAAS,GAAGC,QAAS;MACvCW,GAAG,EAAE,GAAGN,UAAU,GAAG,OAAO,GAAG,MAAM;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACFb,OAAA;MAAMM,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,eAChB,EAACJ,UAAU,GAAG,MAAM,GAAG,OAAO,EAAC,OAC9C;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAACX,EAAA,CAlBID,WAAW;EAAA,QACqBL,QAAQ;AAAA;AAAAkB,EAAA,GADxCb,WAAW;AAoBjB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}