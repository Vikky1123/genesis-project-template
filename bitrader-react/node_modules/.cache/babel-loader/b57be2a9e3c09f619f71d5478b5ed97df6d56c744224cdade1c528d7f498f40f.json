{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUPA\\\\3D Objects\\\\bitrader-react\\\\src\\\\components\\\\Header\\\\ThemeToggle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './Header.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const [isDark, setIsDark] = React.useState(() => {\n    return localStorage.getItem('bitrader-theme-mode') === 'dark';\n  });\n  useEffect(() => {\n    const root = document.documentElement;\n    if (isDark) {\n      root.setAttribute('data-bs-theme', 'dark');\n      localStorage.setItem('bitrader-theme-mode', 'dark');\n    } else {\n      root.setAttribute('data-bs-theme', 'light');\n      localStorage.setItem('bitrader-theme-mode', 'light');\n    }\n  }, [isDark]);\n  const toggleTheme = () => {\n    setIsDark(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.lightdarkSwitch,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"btnSwitch\",\n      onClick: toggleTheme,\n      className: styles.switchBtn,\n      style: {\n        backgroundColor: isDark ? '#ffffff' : '#00D094',\n        color: isDark ? '#00D094' : '#ffffff'\n      },\n      \"aria-label\": `Switch to ${isDark ? 'light' : 'dark'} mode`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isDark ? '../wp-content/themes/bitrader/assets/img/icons/sun.svg' : '../wp-content/themes/bitrader/assets/img/icons/moon.svg',\n        alt: `Switch to ${isDark ? 'light' : 'dark'} mode`,\n        className: \"switch-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"lb8SaDN1JijXWSBliBNsniKhLBI=\");\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useEffect","styles","jsxDEV","_jsxDEV","ThemeToggle","_s","isDark","setIsDark","useState","localStorage","getItem","root","document","documentElement","setAttribute","setItem","toggleTheme","prev","className","lightdarkSwitch","children","id","onClick","switchBtn","style","backgroundColor","color","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LUPA/3D Objects/bitrader-react/src/components/Header/ThemeToggle.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nconst ThemeToggle = () => {\r\n  const [isDark, setIsDark] = React.useState(() => {\r\n    return localStorage.getItem('bitrader-theme-mode') === 'dark';\r\n  });\r\n\r\n  useEffect(() => {\r\n    const root = document.documentElement;\r\n    if (isDark) {\r\n      root.setAttribute('data-bs-theme', 'dark');\r\n      localStorage.setItem('bitrader-theme-mode', 'dark');\r\n    } else {\r\n      root.setAttribute('data-bs-theme', 'light');\r\n      localStorage.setItem('bitrader-theme-mode', 'light');\r\n    }\r\n  }, [isDark]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.lightdarkSwitch}>\r\n      <button\r\n        id=\"btnSwitch\"\r\n        onClick={toggleTheme}\r\n        className={styles.switchBtn}\r\n        style={{\r\n          backgroundColor: isDark ? '#ffffff' : '#00D094',\r\n          color: isDark ? '#00D094' : '#ffffff'\r\n        }}\r\n        aria-label={`Switch to ${isDark ? 'light' : 'dark'} mode`}\r\n      >\r\n        <img\r\n          src={isDark ? '../wp-content/themes/bitrader/assets/img/icons/sun.svg' : '../wp-content/themes/bitrader/assets/img/icons/moon.svg'}\r\n          alt={`Switch to ${isDark ? 'light' : 'dark'} mode`}\r\n          className=\"switch-icon\"\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,MAAM;IAC/C,OAAOC,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,KAAK,MAAM;EAC/D,CAAC,CAAC;EAEFV,SAAS,CAAC,MAAM;IACd,MAAMW,IAAI,GAAGC,QAAQ,CAACC,eAAe;IACrC,IAAIP,MAAM,EAAE;MACVK,IAAI,CAACG,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC;MAC1CL,YAAY,CAACM,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC;IACrD,CAAC,MAAM;MACLJ,IAAI,CAACG,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;MAC3CL,YAAY,CAACM,OAAO,CAAC,qBAAqB,EAAE,OAAO,CAAC;IACtD;EACF,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC;EAEZ,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBT,SAAS,CAAEU,IAAI,IAAK,CAACA,IAAI,CAAC;EAC5B,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAEjB,MAAM,CAACkB,eAAgB;IAAAC,QAAA,eACrCjB,OAAA;MACEkB,EAAE,EAAC,WAAW;MACdC,OAAO,EAAEN,WAAY;MACrBE,SAAS,EAAEjB,MAAM,CAACsB,SAAU;MAC5BC,KAAK,EAAE;QACLC,eAAe,EAAEnB,MAAM,GAAG,SAAS,GAAG,SAAS;QAC/CoB,KAAK,EAAEpB,MAAM,GAAG,SAAS,GAAG;MAC9B,CAAE;MACF,cAAY,aAAaA,MAAM,GAAG,OAAO,GAAG,MAAM,OAAQ;MAAAc,QAAA,eAE1DjB,OAAA;QACEwB,GAAG,EAAErB,MAAM,GAAG,wDAAwD,GAAG,yDAA0D;QACnIsB,GAAG,EAAE,aAAatB,MAAM,GAAG,OAAO,GAAG,MAAM,OAAQ;QACnDY,SAAS,EAAC;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAxCID,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AA0CjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}